/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class ANotEqualCompTypes extends PCompTypes
{
    private TNotEq _notEq_;

    public ANotEqualCompTypes()
    {
    }

    public ANotEqualCompTypes(
        TNotEq _notEq_)
    {
        setNotEq(_notEq_);

    }
    public Object clone()
    {
        return new ANotEqualCompTypes(
            (TNotEq) cloneNode(_notEq_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANotEqualCompTypes(this);
    }

    public TNotEq getNotEq()
    {
        return _notEq_;
    }

    public void setNotEq(TNotEq node)
    {
        if(_notEq_ != null)
        {
            _notEq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _notEq_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_notEq_);
    }

    void removeChild(Node child)
    {
        if(_notEq_ == child)
        {
            _notEq_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_notEq_ == oldChild)
        {
            setNotEq((TNotEq) newChild);
            return;
        }

    }
}

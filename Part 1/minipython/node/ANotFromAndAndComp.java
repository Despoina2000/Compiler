/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class ANotFromAndAndComp extends PAndComp
{
    private PNotComp _notComp_;

    public ANotFromAndAndComp()
    {
    }

    public ANotFromAndAndComp(
        PNotComp _notComp_)
    {
        setNotComp(_notComp_);

    }
    public Object clone()
    {
        return new ANotFromAndAndComp(
            (PNotComp) cloneNode(_notComp_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANotFromAndAndComp(this);
    }

    public PNotComp getNotComp()
    {
        return _notComp_;
    }

    public void setNotComp(PNotComp node)
    {
        if(_notComp_ != null)
        {
            _notComp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _notComp_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_notComp_);
    }

    void removeChild(Node child)
    {
        if(_notComp_ == child)
        {
            _notComp_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_notComp_ == oldChild)
        {
            setNotComp((PNotComp) newChild);
            return;
        }

    }
}

/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AGreatEqualCompTypes extends PCompTypes
{
    private TGreatEq _greatEq_;

    public AGreatEqualCompTypes()
    {
    }

    public AGreatEqualCompTypes(
        TGreatEq _greatEq_)
    {
        setGreatEq(_greatEq_);

    }
    public Object clone()
    {
        return new AGreatEqualCompTypes(
            (TGreatEq) cloneNode(_greatEq_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGreatEqualCompTypes(this);
    }

    public TGreatEq getGreatEq()
    {
        return _greatEq_;
    }

    public void setGreatEq(TGreatEq node)
    {
        if(_greatEq_ != null)
        {
            _greatEq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _greatEq_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_greatEq_);
    }

    void removeChild(Node child)
    {
        if(_greatEq_ == child)
        {
            _greatEq_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_greatEq_ == oldChild)
        {
            setGreatEq((TGreatEq) newChild);
            return;
        }

    }
}

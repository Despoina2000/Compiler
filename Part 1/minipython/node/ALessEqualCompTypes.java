/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class ALessEqualCompTypes extends PCompTypes
{
    private TLessEq _lessEq_;

    public ALessEqualCompTypes()
    {
    }

    public ALessEqualCompTypes(
        TLessEq _lessEq_)
    {
        setLessEq(_lessEq_);

    }
    public Object clone()
    {
        return new ALessEqualCompTypes(
            (TLessEq) cloneNode(_lessEq_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALessEqualCompTypes(this);
    }

    public TLessEq getLessEq()
    {
        return _lessEq_;
    }

    public void setLessEq(TLessEq node)
    {
        if(_lessEq_ != null)
        {
            _lessEq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lessEq_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_lessEq_);
    }

    void removeChild(Node child)
    {
        if(_lessEq_ == child)
        {
            _lessEq_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_lessEq_ == oldChild)
        {
            setLessEq((TLessEq) newChild);
            return;
        }

    }
}

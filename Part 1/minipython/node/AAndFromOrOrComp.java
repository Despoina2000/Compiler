/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AAndFromOrOrComp extends POrComp
{
    private PAndComp _andComp_;

    public AAndFromOrOrComp()
    {
    }

    public AAndFromOrOrComp(
        PAndComp _andComp_)
    {
        setAndComp(_andComp_);

    }
    public Object clone()
    {
        return new AAndFromOrOrComp(
            (PAndComp) cloneNode(_andComp_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAndFromOrOrComp(this);
    }

    public PAndComp getAndComp()
    {
        return _andComp_;
    }

    public void setAndComp(PAndComp node)
    {
        if(_andComp_ != null)
        {
            _andComp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _andComp_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_andComp_);
    }

    void removeChild(Node child)
    {
        if(_andComp_ == child)
        {
            _andComp_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_andComp_ == oldChild)
        {
            setAndComp((PAndComp) newChild);
            return;
        }

    }
}

/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AGroupCommaIdEqVal extends PGroupCommaIdEqVal
{
    private TComma _comma_;
    private TId _id_;
    private PGroupEqVal _groupEqVal_;

    public AGroupCommaIdEqVal()
    {
    }

    public AGroupCommaIdEqVal(
        TComma _comma_,
        TId _id_,
        PGroupEqVal _groupEqVal_)
    {
        setComma(_comma_);

        setId(_id_);

        setGroupEqVal(_groupEqVal_);

    }
    public Object clone()
    {
        return new AGroupCommaIdEqVal(
            (TComma) cloneNode(_comma_),
            (TId) cloneNode(_id_),
            (PGroupEqVal) cloneNode(_groupEqVal_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGroupCommaIdEqVal(this);
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public TId getId()
    {
        return _id_;
    }

    public void setId(TId node)
    {
        if(_id_ != null)
        {
            _id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _id_ = node;
    }

    public PGroupEqVal getGroupEqVal()
    {
        return _groupEqVal_;
    }

    public void setGroupEqVal(PGroupEqVal node)
    {
        if(_groupEqVal_ != null)
        {
            _groupEqVal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _groupEqVal_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_comma_)
            + toString(_id_)
            + toString(_groupEqVal_);
    }

    void removeChild(Node child)
    {
        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if(_id_ == child)
        {
            _id_ = null;
            return;
        }

        if(_groupEqVal_ == child)
        {
            _groupEqVal_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(_id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(_groupEqVal_ == oldChild)
        {
            setGroupEqVal((PGroupEqVal) newChild);
            return;
        }

    }
}
